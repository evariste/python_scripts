
# coding: utf-8

# Runs in a virtual python environment. Run command
# 
# source /Users/paulaljabar/work/scripts/python/pythonEnvs/surfaceAnalysis/bin/activate
# 
# before invoking this script
# 

# In[2]:

import nibabel as nib
import SimpleITK as sitk
import numpy as np
import sys
sys.path.append('/Users/paulaljabar/work/scripts/python')
from generalUtilsPythonPA import runCommand
import geometryUtilsPA


# In[3]:

dataDir = '/Users/paulaljabar/work/cdb/e-prime/from-peridata/EPRIME'
scanID = 'EP5046'

workingDir = '/Users/paulaljabar/work/sandpit'

scanDir = dataDir + '/' + scanID 

scanT2Dir  = scanDir + '/003_volumetric_data'
scanSegDir = scanT2Dir + '/segmentations'
scanICADir = (scanDir + '/002_functional_data/' 
              + scanID + '_rs_fMRI.ica')

tissueSegImg = scanSegDir + '/' + scanID + '_tissue_labels.nii.gz'

atlasDir = '/Users/paulaljabar/work/atlases/neo-nr-T1-T2-segs'

irtkDir = '/Users/paulaljabar/work/packages/irtk/build/bin'


# In[4]:

# Map atlas mesh to individual T2 image

atlasMesh = atlasDir + '/atlas-7/cortex-mid-40-weeks.vtk'
t2Mesh = workingDir + '/temp.vtk'
dofFileT2toTemplate = scanDir + '/003_volumetric_data/'
dofFileT2toTemplate = dofFileT2toTemplate +  scanID + '_T2_to_template.dof'

cmd = (irtkDir + '/stransformation'
       + ' ' + atlasMesh
       + ' ' + t2Mesh
       + ' ' + '-dofin ' + dofFileT2toTemplate)
_,_ = runCommand(cmd)


# Ensure t2 mesh is definitely inside the cortex, i.e. not perhaps at the outer edge

# Do this by registering to the surface of a mask generated by eroding a cerebrum mask

cerebrumShrinkT2 = workingDir + '/cerebrum-temp.nii.gz'
cmd = (irtkDir + '/extract_roi'
       + ' ' + tissueSegImg
       + ' ' + cerebrumShrinkT2
       + ' ' + '2 3 5 7')
_,_ = runCommand(cmd)


cmd = (irtkDir + '/dilation'
       + ' ' + cerebrumShrinkT2
       + ' ' + cerebrumShrinkT2
       + ' ' + '-iterations 3')
_,_ = runCommand(cmd)

cmd = (irtkDir + '/erosion'
       + ' ' + cerebrumShrinkT2
       + ' ' + cerebrumShrinkT2
       + ' ' + '-iterations 6')
_,_ = runCommand(cmd)

cmd = (irtkDir + '/rescale'
       + ' ' + cerebrumShrinkT2
       + ' ' + cerebrumShrinkT2
       + ' ' + '0 1000')
_,_ = runCommand(cmd)

cmd = (irtkDir + '/blur'
       + ' ' + cerebrumShrinkT2
       + ' ' + cerebrumShrinkT2
       + ' ' + '2')
_,_ = runCommand(cmd)

cmd = (irtkDir + '/mcubes'
       + ' ' + cerebrumShrinkT2
       + ' ' + cerebrumShrinkT2
       + ' ' + '500')
_,_ = runCommand(cmd)

resizeDof = workingDir + '/resize-temp.dof'
cmd = (irtkDir + '/sareg'
       + ' ' + t2Mesh
       + ' ' + cerebrumShrinkT2
       + ' ' + '-dofout ' + resizeDof
       + ' ' + '-gradientDescent')
_,_ = runCommand(cmd)


cmd = (irtkDir + '/stransformation'
       + ' ' + t2Mesh
       + ' ' + t2Mesh
       + ' ' + '-dofin ' + resizeDof)
_,_ = runCommand(cmd)


# In[5]:

# map mesh to individual fmri data

flirtFile = scanICADir + '/reg/example_func2highres.mat'
target = scanT2Dir + '/' + scanID + '_T2.nii.gz'
source = scanICADir + '/example_func.nii.gz'
dofFunc2HiRes = workingDir + '/func2highres.dof'

cmd = (irtkDir + '/flirt2dof'
       + ' ' + flirtFile
       + ' ' + target
       + ' ' + source
       + ' ' + dofFunc2HiRes)
_,_ = runCommand(cmd)


funcMesh = workingDir + '/temp-func.vtk'

cmd = (irtkDir + '/stransformation'
       + ' ' + t2Mesh
       + ' ' + funcMesh
       + ' ' + '-dofin ' + dofFunc2HiRes)
_,_ = runCommand(cmd)



cmd = (irtkDir + '/rview'
       + ' ' + source 
       + ' ' + '-object ' + funcMesh)
_,_ = runCommand(cmd)



# Average for each vertex, temporal filtering then local time series averaging weighted by 
# distance from point



#  stransformation  ~/work/sandpit/cortex-mid-40-weeks.vtk \
#    ~/work/sandpit/temp.vtk  -dofin EP1009/003_volumetric_data/EP1009_T2_to_template.dof

# rview EP1009/003_volumetric_data/EP1009_T2.nii.gz  -object ~/work/sandpit/temp.vtk


# % pwd
# /Users/paulaljabar/work/cdb/e-prime/from-peridata/EPRIME/EP1009/002_functional_data/EP1009_rs_fMRI.ica

# rview ../../003_volumetric_data/EP1009_T2.nii.gz example_func.nii.gz ~/work/sandpit/temp.dof

